external <- read.csv("./external_cleaned.csv")
View(external)
library(shiny); runApp('D:/Spring_2021/RShiny/Class-3/apps/starwars_04.R')
runApp('D:/Spring_2021/RShiny/Class-3/apps/starwars_04.R')
starwars.load <- starwars %>%
mutate(films = as.character(films),
vehicles = as.character(vehicles),
starships = as.character(starships),
name = as.factor(name))
starwars.load <- starwars %>%
mutate(films = as.character(films),
vehicles = as.character(vehicles),
starships = as.character(starships),
name = as.factor(name))
View(starwars.load)
class(external$Year)
runApp('D:/Spring_2021/RShiny/Class-3/apps/starwars_04.R')
runApp('D:/Spring_2021/RShiny/Class-3/apps/starwars_04.R')
library(flexdashboard)
# Access to CRAN packages data stream
source("package_stream.R")
# pkgStream is a reactive expression that represents a stream of
# new package download data; up to once a second it may return a
# data frame of new downloads since the last update.
pkgStream <- packageStream()
# pkgData is a reactive expression that accumulates previous values
# of pkgStream, discarding any that are older than maxAgeSecs.
maxAgeSecs <- 60 * 5
pkgData <- packageData(pkgStream, maxAgeSecs)
library(flexdashboard)
# Access to CRAN packages data stream
source("package_stream.R")
# pkgStream is a reactive expression that represents a stream of
# new package download data; up to once a second it may return a
# data frame of new downloads since the last update.
pkgStream <- packageStream()
source("package_stream.R")
Debt_GDP <- formatC(extInput()$Debt_GDP, digits = 0)
external <- read.csv("./external_cleaned.csv")
library(tidyr)
external_long <- gather(external, indicator, values, Ext_debt:DSR_Others, factor_key=TRUE)
View(external_long)
write.csv(external_long, "./external.csv")
external <- read.csv("./external.csv")
View(external)
rawdata <- read.csv("./rawdata.csv")
rawdata <- read.csv("./rawdata.csv")
rawdata <- read.csv("./rawdata.csv")
View(rawdata)
external <- read.csv("./external_cleaned.csv")
external <- external %>%
mutate(Year = as.numeric(Year),
Quarter = as.numeric(Quarter))
names(external)
names(external[0:])
external
names(external)[1]
names(external)[3:]
names(external[,3:])
external[,3:]
external[,3:]
names(external[,-1])
external <- read.csv("./external_cleaned.csv")
external[,-1]
names(external[,-1])
names(external[1,-1])
names(external[2,-1])
names(external[,2:-1])
names(external[,-2])
names(external[,-1-2])
names(external[,-1&-2])
names(external[,-2])
names(external[ , -which(names(external) %in% c("Year","Quarter"))])
View(external)
external %>% summarize(avg=mean(Ext_debt))
external <- read.csv("./external_cleaned.csv")
external <- data.frame(lapply(external, function(x) as.numeric(as.character(x))))
external <- read.csv("./external_cleaned.csv")
external <- external %>%
mutate(Year = as.numeric(Year),
Quarter = as.numeric(Quarter))
class(external$Ext_debt)
external <- read.csv("./external_cleaned.csv")
external <- external %>%
mutate(Year = as.numeric(Year),
Quarter = as.numeric(Quarter))
class(external$Ext_debt)
extInput <- reactive({
filter(external, Year %in% input$yearSelect & Quarter %in% input$quarterSelect)
})
renderValueBox({
chosen_indicator <- summarize(avg = mean(input$indicatorSelect))
valueBox(
value = chosen_indicator,
icon = "fa-area-chart",
#color = if (chosen_indicator >= input$rateThreshold) "warning" else "primary"
)
})
# renderValueBox({
#   chosen_indicator <- extInput() %>% summarize(avg = mean(input$indicatorSelect))
#   valueBox(
#     value = chosen_indicator,
#     icon = "fa-area-chart",
#     color = if (chosen_indicator >= input$rateThreshold) "warning" else "primary"
#   )
# })
external <- read.csv("./external_cleaned.csv")
class(external$Year)
library(shiny)
library(ggplot2)
library(dplyr)
starwars.load <- starwars %>%
mutate(films = as.character(films),
vehicles = as.character(vehicles),
starships = as.character(starships),
name = as.factor(name))
runApp('D:/Spring_2021/RShiny/Class-3/apps/starwars_04.R')
library(shiny)
library(ggplot2)
library(dplyr)
library(flexdashboard)
library("tidyverse")
class(external$Ext_debt)
names(extInput())[1]
external <- read.csv("./external_cleaned.csv")
external <- external %>%
mutate(Year = as.character(Year),
Quarter = as.character(Quarter))
external <- read.csv("./external_cleaned.csv")
external <- external %>%
mutate(Year = as.character(Year),
Quarter = as.character(Quarter))
library(shiny)
library(ggplot2)
library(dplyr)
library(flexdashboard)
library("tidyverse")
library(tools)
external <- external %>%
mutate(Year = as.character(Year),
Quarter = as.character(Quarter))
ggplot(data = external, aes_string(x = "Period", y = "Ext_debt")) + geom_line()
ggplot(data = external, aes_string(x = "Period", y = "Ext_debt", group = 1)) + geom_line()
library(shiny)
library(ggplot2)
library(dplyr)
library(flexdashboard)
library("tidyverse")
library(tools)
library(plotly)
library(scales)
library(reshape)
install.packages("reshape")
extMeltInput <- external %>% melt(id = Period)
View(external)
library(shiny)
library(ggplot2)
library(dplyr)
library(flexdashboard)
library("tidyverse")
library(tools)
library(plotly)
library(scales)
library(reshape)
library(tidyverse)
library(shiny)
library(ggplot2)
library(dplyr)
library(flexdashboard)
library(tools)
library(plotly)
library(scales)
library(reshape)
library(tidyverse)
# load Thailand's external stability indicators data
external <- read.csv("./external_cleaned.csv")
external <- external %>%
mutate(Period = as.factor(Period))
external[1,-1]
external[,"Debt_GDP"]
external[-1,"Debt_GDP"]
external[10,"Debt_GDP"]
external[11,"Debt_GDP"]
nrow(external[,"Debt_GDP"])
nrow(external[100,"Debt_GDP"])
nrow(external[15,"Debt_GDP"])
nrow(external[tail(),"Debt_GDP"])
nrow(external[tail(extrenal),"Debt_GDP"])
nrow(external[tail(external),"Debt_GDP"])
external[length(external),"Debt_GDP"]
length(external)
length(external$Debt_GDP)
external[63,"Debt_GDP"]
external[length(external$Debt_GDP),"Debt_GDP"]
